[versions]
benasher-uuid = "0.6.0"
ktor-plugin = "2.3.12"#"2.1.3"
ktor = "2.3.12"#"2.3.0"
kotlin = "1.9.22"
compose = "1.5.12"
shadow = "8.1.0"
solawi = "1.0.4"
logback = "1.4.12"
exposed = "0.48.0"
solytonGroup = "org.solyton"
mysql-connector = "8.0.33"
#"8.0.28"
jupiter = "5.9.3"
h2 = "2.2.220"
sl4j = "2.0.7"
ktor-client-js="1.5.1"
ktor-client-core="1.6.8"
kotlin-serialization-json="1.6.3"
kotlinx-coroutines-core = "1.6.4"
kotlinx-datetime = "0.6.1"
java-jwt = "4.0.0"
jjwt = "0.11.5"
mindrot-jbcrypt = "0.4"
cdimascio-dotenv-kotlin =  "6.4.1"
evoleq-exposedx-migrations = "1"
detekt = "1.23.1"
kover = "0.7.5"


[libraries]
benasher-uuid = { module = "com.benasher44:uuid", version.ref = "benasher-uuid" }
exposed-core = {  module = "org.jetbrains.exposed:exposed-core", version.ref = "exposed"}
exposed-crypt = {  module = "org.jetbrains.exposed:exposed-crypt", version.ref = "exposed"}
exposed-dao = {  module = "org.jetbrains.exposed:exposed-dao", version.ref = "exposed"}
exposed-jdbc = {  module = "org.jetbrains.exposed:exposed-jdbc", version.ref = "exposed"}
# evoleq-exposedx-migrations = { module = "org.evoleq.exposedx.migration", version.ref = "evoleq-exposedx-migrations" }
h2 = {  module = "com.h2database:h2", version.ref = "h2"}
exposed-joda-time = { module = "org.jetbrains.exposed:exposed-jodatime", version.ref = "exposed"}
mysql-connector-java = { module = "mysql:mysql-connector-java", version.ref = "mysql-connector" }

kotlin-test-junit = { module = "org.jetbrains.kotlin:kotlin-test-junit", version.ref = "kotlin" }
kotlinx-coroutines-core = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-core", version.ref = "kotlinx-coroutines-core" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime" , version.ref = "kotlinx-datetime"}
kotlinx-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "kotlin-serialization-json"}

ktor-client-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor-client-core"}
ktor-client-js = { module = "io.ktor:ktor-client-js", version.ref = "ktor-client-js"}
ktor-client-serialization = { module = "io.ktor:ktor-client-serialization", version.ref = "ktor"}
ktor-client-mock = { module = "io.ktor:ktor-client-mock", version.ref = "ktor" }

ktor-serialization-kotlinx-json = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
ktor-server-auth = { module = "io.ktor:ktor-server-auth", version.ref = "ktor" }
ktor-server-auth-jwt = { module = "io.ktor:ktor-server-auth-jwt", version.ref = "ktor" }
ktor-server-core-jvm = { module = "io.ktor:ktor-server-core-jvm" ,version.ref = "ktor"}
ktor-server-netty-jvm ={ module = "io.ktor:ktor-server-netty-jvm" ,version.ref = "ktor"}
ktor-server-cors = { module = "io.ktor:ktor-server-cors" ,version.ref = "ktor"}
ktor-server-content-negotiation = { module = "io.ktor:ktor-server-content-negotiation" ,version.ref = "ktor"}
ktor-server-default-headers = { module = "io.ktor:ktor-server-default-headers" ,version.ref = "ktor"}
ktor-server-call-logging = { module = "io.ktor:ktor-server-call-logging" ,version.ref = "ktor"}
ktor-server-forwarded-header = { module = "io.ktor:ktor-server-forwarded-header" ,version.ref = "ktor"}

ktor-server-tests-jvm = { module = "io.ktor:ktor-server-tests-jvm " ,version.ref = "ktor"}
ktor-http = { module = "io.ktor:ktor-http", version.ref = "ktor"}
ktor-http-cio = { module = "io.ktor:ktor-http-cio", version.ref = "ktor"}
logback = { module = "ch.qos.logback:logback-classic", version.ref = "logback" }
junit-jupiter = { module = "org.junit.jupiter:junit-jupiter", version.ref = "jupiter"}
slf4j-nop = { module = "org.slf4j:slf4j-nop", version.ref = "sl4j"}
java-jwt = { module = "com.auth0:java-jwt", version.ref = "java-jwt" }
jjwt-api = { module = "io.jsonwebtoken:jjwt-api", version.ref = "jjwt" }
jjwt-impl = { module = "io.jsonwebtoken:jjwt-impl", version.ref = "jjwt" }
jjwt-jackson = { module = "io.jsonwebtoken:jjwt-jackson", version.ref = "jjwt" }
mindrot-jbcrypt = { module = "org.mindrot:jbcrypt", version.ref = "mindrot-jbcrypt" }
cdimascio-dotenv-kotlin = { module = "io.github.cdimascio:dotenv-kotlin", version.ref = "cdimascio-dotenv-kotlin" }


[plugins]
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt"}
jvm = { id = "org.jetbrains.kotlin.jvm", version.ref = "kotlin" }
ktor = { id = "io.ktor.plugin", version.ref = "ktor-plugin" }
serialization = {id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
mpp = {id = "org.jetbrains.kotlin.multiplatform", version.ref = "kotlin" }
compose = {id = "org.jetbrains.compose", version.ref = "compose"}
shadow = { id = "com.github.johnrengelman.shadow", version.ref = "shadow" }
kover = { id = "org.jetbrains.kotlinx.kover", version.ref = "kover"}
# evoleq-exposedx-migrations = { module = "org.evoleq.exposedx.migration", version.ref = "evoleq-exposedx-migrations" }