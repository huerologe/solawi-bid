package org.solyton.solawi.bid.module.db.migrations

import org.evoleq.exposedx.migrations.Migration
import org.jetbrains.exposed.sql.Database
import org.jetbrains.exposed.sql.Transaction
import org.solyton.solawi.bid.module.db.repository.ContextToNest
import org.solyton.solawi.bid.module.db.repository.nest
import org.solyton.solawi.bid.module.db.schema.ContextEntity
import org.solyton.solawi.bid.module.db.schema.Contexts

/**
 * Autogenerated [Migration],
 * generated by the evoleq/exposedx migration gradle-plugin.
 * Alter with care!
 *
 * Generated at Sat Mar 29 09:02:47 CET 2025
 *
 * Description:
 * Prepare Table Contexts:
 * 1. Remove unique index from column name
 * 2. Transform all contexts with names R/S/T to nested contexts R-(S-(T))
 * 3. R/S1, R/S2 -> R-(S1, S2)
 */
class Migration1743235367945(
    override val database: Database
) : Migration {

    /**
     * Id of the migration, do not change!
     */
    override val id: Long
        get() = 1743235367945

    /**
     * Upwards migration
     */
    override suspend fun Transaction.up() {
        // Remove Uniqueness constraint on name
        exec("ALTER TABLE contexts DROP CONSTRAINT CONTEXTS_NAME_UNIQUE;")

        // migrate contexts with combined names to trees
        val contextsToMigrate = ContextEntity.find{Contexts.name like "%/%"}
        val roots = ContextEntity.all().filter { !it.name.contains("/") }.toSet()
        contextsToMigrate.forEach {
            ContextToNest(it, it.name.split("/"), roots).nest()
        }
    }

    /**
     * Downwards migration (inverse to the upward migration).
     * These migrations are not taken into account by now!
     */
    override suspend fun Database.down() {
        TODO("Not yet implemented")
    }
}
